window.onload = function(){

	// canvas
		var canvas = document.getElementById("canvas")
		var context = canvas.getContext("2d")
		var season = getSeason()
		
		var windowCrossbeam = [ [0, 575] , [800, 575] , [800, 625] , [0, 625] ]
		var windowLatch = [ [350, 575], [350, 550], [450, 550], [450, 575] ]
		var tree = [[795.4,868.9],[785.9,754.8],[784.5,677.3],[789.9,618.9],[847,533.3],[889.09,435.5],[883.59,383.8],[826.59,492.6],[802.59,419.6],[810.3,491.2],[776.4,466.7],[796.7,498],[806.3,515.7],[789.9,545.5],[756,580.9],[729.5,534],[711.2,482.9],[774.5,402.1],[891.3,332.2],[876.8,283.3],[707.5,400.6],[726.4,326.5],[805.59,247.6],[757.9,279.1],[776.5,248],[737.7,282.1],[765.4,193.4],[808.59,152.6],[769.3,175.6],[745.2,-14],[743.4,211.3],[725.7,186.3],[708.8,145.3],[711.9,182.6],[729,219.5],[701.2,290.2],[675.8,202.7],[674.3,134.5],[661.2,193.9],[641.4,151.8],[637.8,125.6],[672,-11.8],[628,102.1],[565.8,46.7],[616.3,114.5],[634.3,192.5],[533.8,102.1],[595.4,189.5],[548.5,186],[611.3,209.3],[642.4,229],[659.4,265.9],[655.3,344.8],[639.4,401.1],[597.9,254.7],[604.2,326.1],[566.7,297.1],[603.3,344.1],[612.3,382.6],[534.4,302.4],[546,234],[523.9,291.9],[494.9,215.2],[503.9,290.8],[452.7,237.1],[469.2,150.8],[443.5,220.6],[438.2,189.3],[462.7,27.3],[499.1,-113],[465.29,-41.6],[448.1,-77.6],[458.7,-11.89],[442.1,56.3],[427.2,131.6],[402.5,86.2],[414,19.7],[394.7,81.8],[366.1,55.3],[326.2,-5.899999999999999],[345.4,48.2],[310.79,39.4],[227.5,-14.100],[278,34.7],[306.9,57.2],[333.4,67.6],[259.4,84.8],[319.29,87.9],[361.4,87.1],[390.1,112.6],[401.2,149.3],[419.2,225.3],[340.7,195.2],[424.2,244.6],[454.29,282.2],[439.7,293.5],[472.29,302.2],[529.2,343.2],[559.3,379.8],[532.3,380.4],[456.2,341.4],[512.8,389.4],[519.5,375.8],[432,382.2],[566,405.2],[619.9,448.1],[638.2,518.2],[404.6,408.8],[391.1,303.9],[393,401.2],[355.5,352.1],[311,189.6],[353.6,120.7],[304.4,180.2],[302.4,123.1],[297,188.9],[314.7,271.9],[238.5,214.8],[305.9,286.5],[321.2,337.3],[176,262.6],[114.5,251.4],[11,180.9],[67.10000000000002,237.9],[-62,218.1],[21.600000000000023,246.5],[-25.100000000000023,296.1],[44.60000000000002,247.7],[122.60000000000002,267.8],[193.39,292.6],[89.89,318.2],[201.60000000000002,308],[243.5,331.3],[290,360.7],[205.29,372.3],[164.60000000000002,345.1],[192,377.6],[120.2,370.9],[164.5,386.2],[137.29,408.8],[175.29,389.8],[197.29,389.9],[232.7,383.8],[158.60000000000002,461],[59.30,444.8],[157.7,477],[34.19999999999999,521.6],[115.29,502.8],[98.80,550],[120.7,514.1],[140.89,492.1],[162.2,486.2],[177.2,564.1],[177.5,463],[239.7,403.2],[313,380],[335.1,379.1],[355.79,404.2],[398.2,454.5],[341.2,473.6],[275.7,443.1],[319.7,481.4],[243.39,485.5],[291.1,493],[369.7,483.1],[349,533],[383.79,481.8],[414.2,474.4],[494,498.6],[561.4,550.2],[643.2,583.6],[682.5999999999999,643.4],[713.9,709.9],[716.5999999999999,801],[716.5999999999999,913.8],[709.8,998],[693.5,1079.5],[802.2,1080.9]]

	// season-dependent objects
		if (season == "winter") {
			var windowSnow = [
				[[0,1200],[0,1157.8],[35.2,1160.5],[56,1164.3],[79.2,1161],[110.2,1161.5],[143.2,1166.5],[177.5,1165.3],[210,1158.3],[232.7,1155.5],[249.7,1156],[269.7,1161.5],[286.5,1164.7],[310.5,1162],[332.7,1161.5],[348,1161.5],[365.2,1157.8],[380,1158.3],[391.2,1155],[400,1156.8],[400,1157.8],[435.2,1160.5],[456,1164.3],[479.2,1161],[510.2,1161.5],[543.2,1166.5],[577.5,1165.3],[610,1158.3],[632.7,1155.5],[649.7,1156],[669.7,1161.5],[686.5,1164.7],[710.5,1162],[732.7,1161.5],[748,1161.5],[765.2,1157.8],[780,1158.3],[791.2,1155],[800,1156.8],[800,1200]],
				[[0,580],[800,580],[800,537.8],[764.8,540.5],[744,544.3],[720.8,541],[689.8,541.5],[656.8,546.5],[622.5,545.3],[590,538.3],[567.3,535.5],[550.3,536],[530.3,541.5],[513.5,544.7],[489.5,542],[467.3,541.5],[452,541.5],[434.8,537.8],[420,538.3],[408.8,535],[400,536.8],[400,537.8],[364.8,540.5],[344,544.3],[320.8,541],[289.8,541.5],[256.8,546.5],[222.5,545.3],[190,538.3],[167.3,535.5],[150.3,536],[130.3,541.5],[113.5,544.7],[89.5,542],[67.3,541.5],[52,541.5],[34.8,537.8],[20,538.3],[8.8,535],[0,536.8]]
			]

			var snowflakes = []
			var counter = 0
			var snowmanNose = [[308, 835], [355, 835], [311, 845]]
			var snowscapes = [
				[[0,850],[0,1073.9],[801.9,1073.9],[801.9,873.9],[751.7,877.1],[704.2,878.4],[656.7,874.4],[607.9,863.5],[586.2,860.8],[565.8,859.4],[537.3,863.5],[460,864.9],[374.5,859.4],[301.2,858.1],[263.2,860.8],[207.6,870.3],[162.8,878.4],[133,879.8],[105.8,874.4],[70.6,863.5],[28.5,855.4]],
				[[0,900],[0,1100],[800,1100],[800,941],[747.2,944.6],[716,950.6],[681.2,945.8],[646.4,939.8],[615.8,939.2],[576.8,935],[531.2,942.2],[488,943.4],[450.2,936.8],[410,932.6],[375.8,936.8],[334.4,947],[300.8,946.4],[194.8,913.3],[159.6,897],[102.6,888.9],[38.8,894.3]],
				[[0,1000],[0,1200],[800,1200],[800,1005.8],[755.8,1000.5],[704.2,1005.9],[659.4,1022.2],[626.9,1024.9],[571.2,1023.5],[508.8,1015.4],[426.1,1010],[382,1009],[333.8,1016.8],[276.8,1007.3],[238.8,1001.1],[184.5,1001.8],[132.4,1013.4],[117.2,1013.1],[95.5,1006.5],[58.6,995.6],[27.1,993.5]],
				[[0,1240],[0,1090],[70.6,1095.4],[111.8,1103],[158.5,1096.5],[205.1,1088.9],[245.3,1087.8],[297.4,1082.4],[358.2,1092.2],[415.8,1093.2],[466.7,1084.6],[519.9,1079.1],[565.5,1084.6],[614.1,1096.1],[664.3,1083.9],[700.9,1067.6],[733.5,1052.7],[768.6,1044.4],[789.1,1041.1],[800,1040],[800,1240]]
			]
			var snowOnTree = [
				[[602.63,526.51],[612.04,528.4100000000001],[622.5,537.07],[632.07,537.87],[642.16,528.79],[633.25,498.28],[609.94,490.25],[585.76,479.67],[564.75,471.56],[538.25,459.35],[515.0799999999999,460.14],[545.1800000000001,493.46],[560.35,503.97],[579.8399999999999,519.9100000000001],[591.9100000000001,524.65]],
				[[140.02,254.73],[199.69,260.56],[230.61,276.4],[257.34000000000003,284.21],[291.71000000000004,297.13],[310.6,299.72],[330.28999999999996,321.38],[327.76,337.27],[307.01,337.58],[282.72,315.68],[262.46000000000004,306.81],[212.8,281.88]],
				[[705.5,405.53],[733.96,384.19],[766.75,369.89],[813.43,327.57],[771.35,343.29],[748.83,344.92],[736.05,344.25],[713.58,352.68],[702.82,374.55]]
			]
		}
		else if (season == "spring") {
			var leaves = [
				[[240.5,214],[240.5,214],[241,213],[241.5,212.5],[242,211.5],[242,211],[242.5,210.5],[243,210.5],[243.5,210],[244,210],[244,210],[244.5,209.5],[245,209.5],[245.5,209.5],[246,209],[246.5,209],[246.5,209],[247,208.5],[247.5,208.5],[248,208.5],[248.5,208],[248.5,208],[249.5,207.5],[249.5,207.5],[250,207.5],[250.5,207.5],[251,207.5],[251.5,207.5],[251.5,207],[252,207],[252.5,207],[253,207],[253.5,207],[253.5,207],[254,207],[254.5,207],[255,207],[255,207],[255.5,207],[256,207],[256,207],[256.5,207],[257,207],[257.5,207],[257.5,207],[258,207],[258,207],[258.5,207],[258.5,207],[259,207],[259,207],[259.5,207],[260,207],[260,207],[260.5,207],[260.5,207],[261,207],[261,207],[260.5,207],[260.5,207.5],[260.5,207.5],[260.5,208],[260,208],[260,208.5],[260,208.5],[259.5,208.5],[259.5,209],[259.5,209],[259.5,209.5],[259,210],[259,210],[259,210.5],[258.5,210.5],[258.5,211],[258,211],[258,211.5],[258,212],[257.5,212],[257.5,212.5],[257.5,212.5],[257,212.5],[257,213],[256.5,213],[256.5,213],[256.5,213.5],[256,213.5],[256,213.5],[255.5,213.5],[255.5,214],[255,214],[255,214],[255,214],[254.5,214],[254.5,214],[254,214],[253.5,214],[253.5,214],[253,214],[252.5,214],[252.5,214],[252,214],[252,214],[251.5,214.5],[251.5,214.5],[251,214.5],[250.5,214.5],[250,214.5],[249.5,214.5],[249,214.5],[248.5,214.5],[247.5,214.5],[247.5,214.5],[247,214.5],[246.5,215],[246,215],[246,215],[245.5,215],[245,215],[245,215],[244.5,215],[244,215],[243.5,215],[243.5,215],[243,215],[243,215],[242.5,215],[242.5,215],[242,215],[242,215],[242,215],[241.5,215],[241.5,215],[241.5,215],[241,215],[241,215],[241,215],[240.5,215],[240.5,215]],
				[[238,215],[237.5,215],[237,215],[236,215],[235,215.5],[234.5,215.5],[233.5,215.5],[233,215.5],[232.5,216],[232.5,216],[232.5,216],[232,216],[232,216],[231.5,216.5],[231.5,216.5],[231,216.5],[231,217],[230.5,217],[230.5,217.5],[230,218],[229.5,218],[229,218.5],[229,219.5],[228.5,219.5],[228.5,220],[228,220.5],[228,221],[227.5,221],[227.5,221.5],[227.5,221.5],[227.5,222],[227,222],[227,222],[227,222.5],[227,222.5],[227,222.5],[227,223],[226.5,223],[226.5,223.5],[226.5,224],[226.5,224.5],[226,225],[226,226],[226,226.5],[225.5,227],[225.5,227.5],[225.5,228],[225.5,228.5],[225.5,228.5],[225,229],[225,229],[225,229],[225,229.5],[225,229.5],[225,229.5],[225.5,229.5],[225.5,229],[226,229],[226,229],[226.5,228.5],[226.5,228.5],[227,228.5],[227.5,228],[227.5,228],[228,228],[229,227.5],[230,227],[230.5,226.5],[231,226.5],[231.5,226],[232,225.5],[232,225],[232.5,225],[232.5,224.5],[233,224],[233.5,223.5],[233.5,223.5],[233.5,223],[233.5,223],[234,223],[234,222.5],[234,222.5],[234,222],[234.5,222],[234.5,222],[234.5,221.5],[234.5,221.5],[234.5,221],[235,221],[235,220.5],[235,220.5],[235,220],[235,220],[235,219.5],[235,219.5],[235.5,219],[235.5,218.5],[235.5,218.5],[235.5,218],[235.5,217.5],[235.5,217.5],[235.5,217],[236,217],[236,216.5],[236,216.5],[236,216.5],[236,216],[236,216.5],[236,216.5],[236,217],[236,217],[236,217.5],[236,218],[236,218],[236,218],[236,218.5],[236,218.5],[236,218.5],[236,219],[236,219],[236,219.5],[236,219.5],[236,219.5],[236,220],[236,220],[236,220.5],[236,220.5],[236,221],[236,221],[236.5,221.5],[236.5,222],[236.5,222],[237,222.5],[237.5,223.5],[237.5,224],[237.5,224.5],[238,225],[238,225.5],[238,225.5],[238.5,226],[238.5,226],[239,226.5],[239,227],[239,227],[239.5,227],[239.5,227.5],[239.5,227.5],[240,228],[240,228],[240.5,228.5],[240.5,228.5],[240.5,228.5],[240.5,228.5],[241,229],[241,229],[241,229],[241,229],[241.5,229.5],[241.5,229.5],[241.5,229.5],[242,229.5],[242,230],[242,230],[242.5,230],[242.5,230],[242.5,230.5],[243,230.5],[243,230],[243,230],[243,229.5],[243,229.5],[243,229],[243,229],[243,228.5],[243,228],[243,227.5],[243,227.5],[243,227.5],[243,227],[243,227],[243,226.5],[243,226.5],[243,226.5],[243,226],[243,226],[243,225.5],[243,225.5],[243,225],[243,224.5],[243,224.5],[243,224],[243,223.5],[243,223.5],[243,223],[243,223],[243,222.5],[243,222],[243,221.5],[243,221.5],[243,221],[243,220.5],[243,220.5],[243,220],[243,220],[242.5,219.5],[242.5,219.5],[242.5,219],[242.5,219],[242,218.5],[242,218.5],[241.5,218],[241.5,218],[241.5,217.5],[241,217.5],[241,217],[241,217],[241,217],[241,217],[240.5,216.5],[240.5,216.5],[240.5,216.5],[240,216.5],[240,216]],
				[[274.5,241],[274.5,239.5],[274,238.5],[273,236.5],[272.5,235.5],[271.5,233.5],[271.5,232.5],[271.5,232],[271.5,231],[271.5,230.5],[271.5,230],[271.5,229.5],[271.5,229],[271.5,228.5],[271.5,228],[271.5,227.5],[271.5,227],[272,226.5],[272,226],[272.5,225.5],[272.5,225],[273,224.5],[273.5,224],[273.5,223],[274,222.5],[274,222],[274.5,222],[274.5,221.5],[274.5,221.5],[274.5,221.5],[274.5,221.5],[275,221.5],[275,221],[275,220.5],[275,220.5],[275,220.5],[275,220.5],[275,220.5],[275,220.5],[275,221],[275,221.5],[275,221.5],[275,222],[275,222.5],[275,223.5],[275,224],[275,225.5],[275,226.5],[275.5,227],[276,228],[276,228.5],[276,229],[276,229.5],[276,229.5],[276,230],[276,230],[276,230.5],[276,231],[276,231],[276,231.5],[276,232],[276,232.5],[276,233],[276,233.5],[276,234],[276,234],[276,234.5],[276,235],[276,235],[276,235.5],[276,236],[276,236],[276,236.5],[276,237],[276,237.5],[276,237.5],[276,238],[276,238],[276,238],[276,238.5],[276,238.5],[276,239],[276,239],[276,239],[276,239.5],[276,239.5],[276,239.5],[276,240],[276,240],[276,240],[276,240.5],[276,240.5],[275.5,240.5],[275.5,241],[275.5,241]]				

			]

			var petals = [
				[[239.5,214.5],[239.5,214.5],[240,213],[240.5,212],[241.5,211],[242,209.5],[242.5,209],[242.5,209],[243,208.5],[243,208.5],[243.5,207.5],[243.5,207],[243.5,206],[244,205.5],[244,205],[244,204.5],[244,204],[244.5,203],[244.5,202.5],[244.5,202],[244.5,201.5],[244.5,201],[244.5,200.5],[244.5,200],[244.5,199],[244.5,198.5],[244.5,198],[244.5,198],[244.5,197.5],[244.5,197.5],[244.5,197],[244.5,197],[244.5,196.5],[244.5,196],[244.5,196],[244.5,195.5],[244.5,195.5],[244.5,195],[244.5,195],[244.5,195],[244.5,194.5],[244.5,194.5],[244.5,194],[244.5,194],[244.5,193.5],[244.5,193.5],[244.5,193],[244.5,193],[244.5,193],[244.5,192.5],[244,192.5],[244,192.5],[244,192],[244,192],[243.5,192],[243.5,191.5],[243.5,191.5],[243.5,191],[243,191],[243,191],[243,191],[242.5,190.5],[242.5,190.5],[242.5,190.5],[242,190.5],[242,190.5],[242,190.5],[241.5,190.5],[241.5,190.5],[241.5,190.5],[241,190.5],[241,190.5],[241,191],[241,191],[241,191],[241,191],[240.5,191.5],[240.5,191.5],[240.5,191.5],[240.5,192],[240.5,192],[240.5,192.5],[240.5,192.5],[240,193],[240,193],[240,193],[240,193.5],[239.5,193.5],[239.5,193.5],[239.5,194],[239.5,194],[239.5,194],[239.5,194.5],[239.5,194.5],[239.5,195],[239.5,195.5],[239,195.5],[239,196],[239,197],[238.5,197],[238.5,197.5],[238.5,197.5],[238.5,198.5],[238.5,198.5],[238,199],[238,199],[238,199.5],[238,200],[238,200],[238,200.5],[238,201],[238,201],[238,201.5],[238,201.5],[238,202],[238,202],[238,202],[238,202.5],[238,202.5],[238,203],[238,203.5],[238,203.5],[238,204],[238,204],[238,204.5],[238,204.5],[238,205],[238,205],[238,205.5],[238,205.5],[238,206],[237.5,206],[237.5,206.5],[237.5,206.5],[237.5,206.5],[237.5,207],[237.5,207],[237.5,207],[237.5,207.5],[237.5,207.5],[237.5,207.5],[237.5,208],[237.5,208],[237.5,208.5],[237.5,208.5],[237.5,209],[237.5,209],[237.5,209.5],[237.5,209.5],[237.5,210],[237.5,210],[237.5,210],[237.5,210.5],[237.5,210.5],[237.5,210.5],[237.5,211],[237.5,211],[237.5,211],[238,211],[238,211],[238,211],[238,211],[238.5,210.5],[238.5,210.5],[238.5,210],[238.5,209.5],[238.5,208.5],[238.5,208.5],[238.5,208],[239,207.5],[239,207],[239,207],[239,207],[239,206.5],[239,206.5],[239,206.5],[239,206],[239,206],[239,206],[239,206],[239,205.5],[239,205.5],[239,205.5],[239,205],[238.5,205],[238.5,204.5],[238.5,204],[238,204],[238,203.5],[238,203],[237.5,203],[237.5,202.5],[237.5,202.5],[237.5,202],[237.5,202],[237,201.5],[237,201],[237,201],[237,200.5],[236.5,200.5],[236.5,200],[236,199.5],[236,199.5],[236,199],[235.5,199],[235.5,198.5],[235.5,198.5],[235,198],[235,198],[235,197.5],[234.5,197],[234.5,197],[234.5,197],[234.5,196.5],[234,196.5],[234,196.5],[234,196],[233.5,196],[233.5,195.5],[233.5,195.5],[233,195.5],[233,195.5],[232.5,195],[232.5,195],[232.5,195],[232,195],[232,195],[232,195],[231.5,195],[231.5,195],[231,194.5],[231,194.5],[230.5,194.5],[230.5,194.5],[230.5,194.5],[230,194.5],[230,194.5],[230,194.5],[229.5,194.5],[229.5,194],[229,194],[229,194],[229,194],[229,194],[228.5,194],[228.5,194],[228,194],[228,194],[228,194],[228,194],[227.5,194],[227.5,194],[227.5,194],[227,194],[227,194],[227,194],[227,194],[227,194],[227,194.5],[227,194.5],[227,194.5],[227,195],[227,195],[227,195.5],[227,195.5],[227,195.5],[227,196],[227,196],[227,196.5],[227,196.5],[227,196.5],[227,197],[227,197],[227,197],[227,197.5],[227,197.5],[227,197.5],[227.5,198],[227.5,198],[227.5,198],[227.5,198.5],[227.5,198.5],[227.5,198.5],[227.5,199],[228,199.5],[228,199.5],[228,200],[228,200.5],[228.5,200.5],[229,201],[229,201.5],[229.5,202],[230,202.5],[230,203],[230,203],[230,203.5],[230.5,204],[230.5,204],[231,204.5],[231,205],[231,205],[231.5,205.5],[231.5,205.5],[231.5,206],[232,206],[232,206],[232,206.5],[232,206.5],[232.5,206.5],[232.5,206.5],[232.5,207],[232.5,207],[233,207],[233,207.5],[233,207.5],[233,207.5],[233,207.5],[233.5,208],[233.5,208],[233.5,208],[233.5,208],[233.5,208],[234,208.5],[234,208.5],[234,208.5],[234,209],[234.5,209],[234.5,209],[234.5,209],[235,209.5],[235,209.5],[235,209.5],[235,209.5],[235,209.5],[235,209.5],[235,209],[234.5,209],[234.5,208.5],[234,208.5],[234,208.5],[234,208],[233.5,208],[233.5,208],[233,208],[233,208],[233,208],[233,207.5],[232.5,207.5],[232.5,207.5],[232.5,207.5],[232,207.5],[232,207.5],[231.5,207.5],[231.5,207],[231.5,207],[231,207],[231,207],[230.5,207],[230.5,207],[230,207],[229.5,207],[229.5,207],[229,206.5],[228.5,206.5],[228.5,206.5],[228,206.5],[228,206.5],[227.5,206.5],[227,206.5],[226.5,206.5],[226,206.5],[226,206.5],[225.5,206.5],[225,206.5],[224.5,207],[224,207.5],[223.5,207.5],[223,207.5],[222.5,208],[222.5,208],[222,208],[221.5,208],[221.5,208],[221,208.5],[221,208.5],[221,208.5],[220.5,208.5],[220.5,208.5],[220.5,209],[220.5,209],[220,209],[220,209],[220,209],[220,209.5],[219.5,209.5],[219.5,209.5],[219.5,209.5],[220,210],[220,210],[220,210],[220.5,210.5],[220.5,210.5],[220.5,210.5],[221,210.5],[221,211],[221,211],[221.5,211],[221.5,211],[222,211],[222,211],[222,211.5],[222.5,211.5],[222.5,211.5],[222.5,211.5],[223,211.5],[223,211.5],[223,211.5],[223.5,212],[223.5,212],[223.5,212],[223.5,212],[224,212],[224,212],[224.5,212],[224.5,212.5],[224.5,212.5],[225,212.5],[225,212.5],[225,212.5],[225.5,212.5],[225.5,212.5],[226,213],[226,213],[226,213],[226,213],[226.5,213],[226.5,213],[226.5,213],[227,213],[227,213.5],[227,213.5],[227.5,213.5],[227.5,213.5],[227.5,213.5],[228,213.5],[228,213.5],[228.5,213.5],[229,214],[229.5,214],[229.5,214],[230,214],[230,214],[230.5,214],[230.5,214],[231,214],[231.5,214],[231.5,214],[231.5,214],[232,214],[232,214],[232,214],[232.5,214],[233,214],[233,214],[233.5,214],[234,214],[234.5,214],[235,214],[235,214],[235,214],[235.5,214],[235.5,214],[236,214],[236,214],[236,214],[236.5,214],[236.5,214],[236.5,214],[237,214],[237,214],[237,214],[237.5,214],[237.5,214],[237.5,214],[238,214],[238,214],[238,214],[238,214],[238,214],[238,213.5],[238,213.5]],
				
				[[298.5,147.5],[297,147.5],[296.5,147.5],[295,147.5],[294,147.5],[293.5,147],[292.5,147],[291,146.5],[290.5,146.5],[289.5,146],[289,146],[288.5,145.5],[288,145.5],[287.5,145],[287,145],[286.5,144.5],[286,144.5],[285.5,144],[285.5,144],[285,144],[285,143.5],[284.5,143],[284,143],[284,142.5],[283.5,142.5],[283.5,142],[283,141.5],[283,141.5],[282.5,141],[282.5,140.5],[282,140],[282,139.5],[281.5,139],[281.5,138.5],[281.5,138],[281.5,137.5],[281,137],[281,137],[281,136.5],[281,136],[281,136],[280.5,135.5],[280.5,135],[280.5,135],[280.5,134.5],[280.5,134.5],[280.5,134.5],[280.5,134.5],[280.5,134.5],[281,134.5],[281.5,134.5],[282,134.5],[282.5,134.5],[282.5,134.5],[283,134.5],[283.5,134.5],[284,134.5],[284,134.5],[284.5,134.5],[285,134.5],[285,134.5],[285,134.5],[285.5,134.5],[285.5,134.5],[286,134.5],[286.5,134.5],[286.5,134.5],[287,135],[287.5,135],[287.5,135],[288,135.5],[288,135.5],[288.5,136],[288.5,136],[289,136],[289,136.5],[289.5,136.5],[289.5,137],[289.5,137.5],[289.5,137.5],[290,137.5],[290,138],[290,138],[290,138],[290.5,138],[290.5,138.5],[290.5,138.5],[291,139],[291,139],[291,139],[291,139],[291.5,139.5],[291.5,139.5],[291.5,140],[291.5,140],[292,140],[292,140.5],[292,140.5],[292,140.5],[292,140.5],[292,140.5],[292,140],[292,139.5],[292,139],[292,138.5],[291.5,137.5],[291.5,137],[291.5,136],[291,135.5],[291,135],[291,134.5],[290.5,134],[290.5,133.5],[290.5,133.5],[290.5,133],[290.5,132.5],[290.5,132.5],[290.5,132],[290.5,132],[290.5,131.5],[290.5,131.5],[290.5,131],[290.5,130.5],[290.5,130.5],[290.5,130],[290.5,129.5],[290.5,129.5],[290.5,129],[290.5,128.5],[290.5,128],[291,127.5],[291,127],[291.5,126.5],[291.5,126],[291.5,125.5],[291.5,125.5],[292,125.5],[292,125.5],[292,125.5],[292,125],[292.5,125],[292.5,124.5],[292.5,124.5],[292.5,124.5],[292.5,125],[292.5,125],[292.5,125.5],[293,126],[293,126],[293.5,126.5],[294,127],[294.5,127.5],[294.5,127.5],[295,128],[295,128],[295,128.5],[295,128.5],[295.5,128.5],[295.5,129],[295.5,129],[295.5,129],[295.5,129],[296,129.5],[296,129.5],[296,130],[296.5,130],[296.5,130.5],[296.5,130.5],[296.5,131],[297,131],[297,131.5],[297,132],[297,132],[297,132.5],[297.5,133],[297.5,133],[297.5,133],[297.5,133.5],[297.5,133.5],[297.5,133.5],[297.5,134],[297.5,134],[297.5,134],[297.5,134],[297.5,134.5],[297.5,135],[297.5,135],[297.5,135.5],[297.5,135.5],[297.5,136],[297.5,136],[297.5,136.5],[297.5,136.5],[297.5,137],[297.5,137],[297.5,137],[297.5,137.5],[297.5,137.5],[297.5,138],[297.5,138],[297.5,138],[297.5,138.5],[297.5,138.5],[297.5,139],[297.5,139],[297.5,139],[297.5,139.5],[297.5,139.5],[297.5,139.5],[297.5,140],[297.5,140],[297.5,140],[297.5,140],[297.5,140.5],[297.5,140.5],[297.5,140.5],[297.5,141],[297.5,141],[297.5,141],[297.5,141.5],[297.5,141.5],[297.5,142],[297.5,142],[297.5,142],[297.5,142.5],[297.5,142.5],[297.5,142.5],[297.5,143],[297.5,143],[297.5,143.5],[297.5,143.5],[297.5,143.5],[297.5,144],[297.5,144],[297.5,144],[297.5,144.5],[297.5,144.5],[297.5,144.5],[297.5,144.5],[297.5,145],[298,145],[298,144.5],[298,144.5],[298,144]],
				[[297.5,145.5],[297,145.5],[296,145.5],[295.5,145.5],[294.5,145.5],[294,145.5],[293.5,146],[293,146],[292.5,146],[292,146],[291.5,146.5],[291,146.5],[290,147],[289.5,147],[288.5,147.5],[287.5,148],[287,148.5],[286.5,148.5],[286,149],[285.5,149.5],[285,150],[284.5,150],[284.5,150.5],[284,150.5],[283.5,151],[283.5,151.5],[283,152],[282.5,152.5],[282,153],[282,153],[281.5,153.5],[281.5,153.5],[281,154],[281,154.5],[280.5,154.5],[280.5,155],[280.5,155],[280.5,155],[280,155],[280,155.5],[280.5,155.5],[280.5,155],[281,155],[281,155],[281.5,155],[282,155],[282.5,154.5],[282.5,154.5],[283,154.5],[284,154.5],[284.5,154.5],[285,154.5],[285.5,154.5],[286,154.5],[287,154.5],[287.5,154.5],[288,154.5],[288.5,154],[289,154],[289.5,154],[290.5,154],[290.5,153.5],[291,153.5],[291.5,153.5],[292,153.5],[292,153],[292.5,153],[293,152.5],[293,152.5],[293.5,152],[294,152],[294.5,151.5],[295,151.5],[295,151],[295.5,150.5],[295.5,150.5],[295.5,150],[296,150],[296,150],[296,149.5],[296,149.5],[296,149],[296,149],[296.5,149],[296.5,148.5],[296.5,148.5],[296.5,148.5],[296.5,148],[296.5,148],[296.5,148],[297,147.5],[297,147.5],[297,147],[297.5,147],[297.5,146.5],[297.5,146.5],[297.5,146.5]],
				[[301.5,123.5],[301.5,122.5],[301,121],[300,119.5],[299.5,118.5],[298.5,116.5],[297.5,114.5],[297,114],[297,113.5],[296.5,113],[296,112.5],[296,112],[296,112],[295.5,111.5],[295.5,111.5],[295.5,111],[295.5,111],[295.5,110.5],[295.5,110],[295.5,110],[295.5,109.5],[295.5,109],[295.5,108.5],[295.5,108],[295.5,107.5],[296,107],[296,106.5],[296,106.5],[296,106.5],[296.5,106],[296.5,105.5],[297,105.5],[297,105],[297,104.5],[297.5,104],[297.5,104],[297.5,103.5],[297.5,103.5],[298,103.5],[298,103.5],[298,103.5],[298,103.5],[298,104],[298,104],[298,104],[298,104],[298,104.5],[298,104.5],[298,104.5],[298,105],[298,105],[298,106],[298.5,106],[298.5,106.5],[298.5,107],[299,107],[299,107.5],[299.5,108],[299.5,108],[299.5,108.5],[300,109],[300.5,109.5],[300.5,110],[300.5,110],[300.5,110.5],[301,110.5],[301,111],[301,111.5],[301.5,112],[301.5,112.5],[301.5,113],[301.5,113],[301.5,113.5],[301.5,113.5],[302,113.5],[302,113.5],[302,113.5],[302,113],[302,113],[302,112.5],[302,112.5],[302,112],[302,112],[302,112],[302,111.5],[302.5,111],[302.5,110.5],[302.5,110],[303,109.5],[303,109],[303,108.5],[303.5,108.5],[303.5,108],[304,108],[304,107.5],[304.5,107.5],[304.5,107],[305,106.5],[305.5,106.5],[305.5,106],[306.5,105.5],[307,105],[307.5,104.5],[308,104.5],[308.5,104.5],[308.5,104],[309,104],[309.5,104],[310,104],[310,103.5],[310.5,103.5],[311,103.5],[311.5,103.5],[311.5,103.5],[311.5,103.5],[311.5,103.5],[311.5,104],[311.5,104.5],[311,105],[311,106],[310.5,106.5],[310.5,107.5],[310.5,108.5],[310,109],[310,109.5],[310,109.5],[310,110],[310,110],[309.5,110.5],[309.5,110.5],[309.5,111.5],[309,111.5],[309,111.5],[309,112],[308.5,112],[308.5,112.5],[308,112.5],[308,113],[307.5,113],[307.5,113.5],[307,114],[307,114],[307,114],[306.5,114.5],[306.5,114.5],[306.5,114.5],[306.5,115],[306.5,114.5],[307,114],[307,114],[307.5,113.5],[307.5,113],[308,113],[308.5,112.5],[308.5,112],[309,112],[309.5,111.5],[310,111.5],[310,111.5],[310.5,111.5],[310.5,111.5],[311.5,111.5],[311.5,111.5],[312,111.5],[312,111.5],[312.5,111],[313,111],[313,111],[314,111],[314,111],[314.5,111],[315,111],[315.5,111],[315.5,111],[316,111],[316,111],[316,111],[316.5,111],[317,111],[317,111],[317,111],[317.5,111],[317.5,111],[317.5,111],[318,111],[318,111],[318.5,111],[318.5,111],[318.5,111],[318.5,111.5],[318,112],[318,112.5],[317.5,113],[317.5,113.5],[317,114],[317,114.5],[316.5,115.5],[316,115.5],[316,116],[316,116.5],[315.5,116.5],[315.5,117],[315,117],[315,117],[314.5,117],[314,117.5],[313.5,117.5],[313,118],[312.5,118],[312,118],[312,118.5],[311.5,118.5],[311,118.5],[310.5,119],[310,119],[309.5,119.5],[309.5,119.5],[309,119.5],[309,119.5],[309,119.5],[309,119.5],[309.5,119.5],[309.5,119.5],[309.5,119.5],[310,119.5],[310,119.5],[310.5,119.5],[310.5,119.5],[310.5,119.5],[311,119],[312,119],[312.5,119],[313,119],[313.5,119],[313.5,119],[314,119],[314,119],[314,119],[314.5,119],[314.5,119],[314.5,119],[315,119],[315,119],[315.5,119],[316,119],[316,119],[316.5,119],[316.5,119],[317,119],[317.5,119],[318,119],[318,119],[318.5,119],[319,119.5],[319,119.5],[319.5,119.5],[319.5,119.5],[320,119.5],[320,119.5],[320.5,119.5],[321,119.5],[321.5,119.5],[321.5,119.5],[321.5,120],[321.5,120],[321.5,120],[321.5,120.5],[321.5,120.5],[321.5,120.5],[321.5,121],[321.5,121.5],[321,122],[321,122],[320.5,122.5],[320.5,122.5],[320,123],[320,123.5],[319.5,123.5],[319,124],[318.5,124.5],[318.5,124.5],[317.5,125],[317,125],[316,125.5],[315.5,125.5],[315,125.5],[314.5,126],[314,126],[313,126],[312.5,126],[312,126.5],[311,126.5],[310.5,126.5],[309.5,126.5],[309,126.5],[308.5,126.5],[308.5,126.5],[308,126.5],[308,126.5],[307.5,126.5],[307.5,126.5],[307,127],[306.5,127],[306,127],[306,127],[305.5,127],[305.5,127],[305,127],[305,127],[304.5,127.5],[304.5,127.5],[304,127.5],[304,127.5],[304,127.5],[303.5,127.5],[303.5,127.5],[303.5,127.5],[303,127.5],[303,127.5],[303,127.5],[302.5,127.5],[302.5,127],[302.5,127],[302.5,127],[302.5,127],[302.5,126.5],[302.5,126]],
				[[302.5,123],[302.5,122.5],[302,121.5],[301,120.5],[300.5,119.5],[299.5,119],[299,118],[299,117.5],[298.5,117.5],[298,117],[298,116.5],[297.5,116.5],[297,116],[296.5,116],[296.5,115.5],[296,115],[295.5,115],[295.5,114.5],[295,114.5],[294.5,114],[294.5,114],[294,114],[294,113.5],[293.5,113.5],[293,113],[292.5,112.5],[292,112.5],[291.5,112],[290.5,112],[290,111.5],[289.5,111.5],[288.5,111],[288,111],[287.5,111],[287,111],[286,110.5],[285.5,110.5],[285,110.5],[284.5,110.5],[284,110.5],[283.5,110.5],[282.5,110.5],[282,110.5],[281.5,110.5],[281,110],[280.5,110],[280,110],[280,110],[279.5,110],[279.5,110],[279.5,110],[279,110],[279,110],[279,110],[279,110],[279,110.5],[279,110.5],[279,110.5],[279.5,111],[279.5,111],[280,111.5],[280,111.5],[280.5,112],[280.5,112.5],[281,112.5],[281,113],[281,113],[281.5,113],[282,113.5],[282,113.5],[282,114],[282.5,114.5],[282.5,114.5],[283,114.5],[283,115],[283.5,115],[283.5,115],[283.5,115],[283.5,115.5],[284,115.5],[284,115.5],[284.5,116],[285,116],[285,116],[285.5,116.5],[285.5,116.5],[285.5,116.5],[286,116.5],[286,117],[286,117],[286.5,117],[286.5,117],[286.5,117.5],[287,117.5],[287.5,117.5],[287.5,117.5],[287.5,117.5],[287.5,118],[288,118],[288,118],[288.5,118],[289,118.5],[289,118.5],[289.5,118.5],[289.5,119],[290,119],[290,119],[290.5,119.5],[290.5,119.5],[291,119.5],[291,119.5],[291.5,120],[291.5,120],[291.5,120],[291.5,120],[292,120],[292,120.5],[292.5,120.5],[292.5,120.5],[293,120.5],[293,120.5],[293.5,121],[294,121],[294,121],[294.5,121.5],[294.5,121.5],[294.5,121.5],[295,121.5],[295,121.5],[295,121.5],[295.5,121.5],[295.5,122],[295.5,122],[296,122],[296.5,122],[296.5,122.5],[297,122.5],[297,122.5],[297,122.5],[297.5,122.5],[297.5,122.5],[297.5,123],[298,123],[298,123],[298.5,123],[298.5,123],[299,123],[299,123.5],[299,123.5],[299.5,123.5],[299.5,123.5],[300,123.5],[300,123.5],[300,124],[300.5,124],[300.5,124],[300.5,124],[301,124]],
				[[305.5,149],[305.5,149],[305.5,148.5],[305.5,147.5],[305.5,146.5],[306,145.5],[306.5,145],[307,144.5],[308,143.5],[308.5,143.5],[308.5,143],[309,143],[309.5,142.5],[310,142.5],[310.5,142],[310.5,142],[311,141.5],[311.5,141.5],[312,141],[312.5,141],[313,141],[313.5,140.5],[314,140.5],[314.5,140.5],[315,140],[316,139.5],[316.5,139.5],[317,139],[317.5,139],[318,138.5],[318.5,138.5],[319,138],[319.5,138],[319.5,138],[319.5,138],[319.5,138],[319.5,138.5],[319.5,139],[319,139.5],[318.5,140],[318,140.5],[317.5,141.5],[316.5,142],[316.5,142.5],[316,143],[315.5,143.5],[315,144],[314.5,145],[314,145],[314,145.5],[313.5,146.5],[313,146.5],[313,147],[312.5,147.5],[312,147.5],[312,148],[311.5,148.5],[311.5,148.5],[311,149],[311,149],[311,149],[310.5,149.5],[310.5,150],[310,150],[310,150.5],[309.5,150.5],[309.5,151],[309,151],[308.5,151],[308.5,151],[308,151],[308,151],[307.5,151],[307,151],[307,151],[306.5,151],[306.5,151],[306.5,151],[306,151],[306,151],[305.5,151]],
				[[299,169.5],[298.5,169.5],[298,168.5],[297.5,168],[296.5,167.5],[295.5,167],[295,166.5],[294,166],[293.5,166],[293,165.5],[292.5,165.5],[292,165.5],[292,165],[291.5,165],[291,165],[290.5,164.5],[289.5,164.5],[289,164.5],[288.5,164.5],[288,164],[287.5,164],[287,164],[286.5,164],[286,163.5],[285.5,163.5],[285,163.5],[284,163.5],[283.5,163.5],[283.5,163],[282.5,163],[282,163],[281.5,163],[281,163],[280.5,162.5],[280,162.5],[280,162.5],[279.5,162.5],[279,162.5],[279,162.5],[278.5,162.5],[278.5,162.5],[278,162.5],[278,162.5],[278.5,163],[279,164],[279,164.5],[279,164.5],[279.5,165],[279.5,165.5],[279.5,166],[280,166.5],[280,166.5],[280.5,167],[280.5,167.5],[281,168],[281,168.5],[281.5,168.5],[281.5,169],[282,169],[282.5,169],[282.5,169.5],[283,169.5],[283.5,169.5],[284,170],[284,170],[284.5,170],[284.5,170.5],[285,170.5],[285.5,171],[286,171],[286.5,171],[287,171],[287.5,171.5],[287.5,171.5],[288,171.5],[288.5,171.5],[289,171.5],[289,172],[289.5,172],[290,172],[290.5,172.5],[291,172.5],[291,172.5],[291.5,172.5],[292,172.5],[292,172.5],[292,172.5],[292.5,172.5],[293,172.5],[293,172.5],[293.5,172.5],[293.5,172.5],[294.5,172.5],[294.5,172.5],[294.5,172.5],[295,172.5],[295,172.5],[295,172.5],[295.5,172.5],[295.5,172.5],[296,172.5],[296,172.5],[296,172.5],[296.5,172.5],[296.5,172.5],[296.5,172.5],[297,172.5],[297,172.5]]
			]
			var rabbit = {
				x: -200,
				y: 880,
				legsPosition: "in",
				legsCounter: 0
			}
		}
		else if (season == "summer") {
			var rain = []
		}
		else if (season == "fall") {
			var leaves = []
		}
	
	// animationSeasons
		var animateSeason = {
			winter: animateWinter,
			spring: animateSpring,
			summer: animateSummer,
			fall: animateFall
		}
	
	// action!
		setInterval(animateSeason[season], 10)

///////////////////////////////////////////////////////////////////////////////////////

	// get the season from hash or random
		function getSeason() {
			if (location.hash) {
				if (location.hash.toLowerCase() == "#winter") {
					return "winter"
				}

				else if (location.hash.toLowerCase() == "#spring") {
					return "spring"
				}

				else if (location.hash.toLowerCase() == "#summer") {
					return "summer"
				}

				else if (location.hash.toLowerCase() == "#fall") {
					return "fall"
				}

				else {
					var seasons = ["winter", "spring"]
					return seasons[Math.floor(Math.random() * seasons.length)]
				}
			}
			else {
				var month = new Date().getMonth() + 1
				var date = new Date().getDate()

				if ((month == 12 && date >= 21) || (month == 1) || (month == 2) || (month == 3 && date < 20)) {
					return "winter"
				}
				
				else if ((month == 3 && date >= 20) || (month == 4) || (month == 5) || (month == 6 && date < 21)) {
					return "spring"
				}

				else if ((month == 6 && date >= 21) || (month == 7) || (month == 8) || (month == 9 && date < 22)) {
					return "summer"
				}

				else if ((month == 9 && date >= 22) || (month == 10) || (month == 11) || (month == 12 && date < 21)) {
					return "fall"
				}
				
			}
		}

	// drawing functions
		function drawShape(coordinates, color, shadowThickness, shadowColor, lineargradient, xOffset, yOffset){
			xOffset = xOffset || 0
			yOffset = yOffset || 0
			context.beginPath()
			context.moveTo(coordinates[0][0] + xOffset, coordinates[0][1] + yOffset)
			for (i = 1; i < coordinates.length; i++){
				context.lineTo(coordinates[i][0] + xOffset, coordinates[i][1] +yOffset)
			}

			context.closePath()

			
			if (shadowColor && shadowThickness){
				context.shadowColor = shadowColor
				context.shadowBlur = shadowThickness
			}
			else {
				context.shadowColor = "transparent"
				context.shadowBlur = 0
			}			

			if (lineargradient){
				context.fillStyle = lineargradient
			}

			else {
				context.fillStyle = color
			}
			context.fill()
		}

		function drawCircle(x, y, radius, color, shadowThickness, shadowColor, radialgradient) {
			context.beginPath()
			context.arc(x, y, radius, 0, 2*Math.PI)
			if(radialgradient){
				context.fillStyle = radialgradient
			}
			else{
				context.fillStyle = color
			}
			
			if (shadowColor && shadowThickness){
				context.shadowColor = shadowColor
				context.shadowBlur = shadowThickness
			}
			else {
				context.shadowColor = "transparent"
				context.shadowBlur = 0
			}
			context.fill()
		}

		function drawImage(file, x, y, width, height) {
			var image = document.createElement("img")
				image.src = file
			context.drawImage(image, x, y, width, height)
		}

	// converter function
		function convertClippath(xOffset, yOffset, clippath) {
			//replace % with "" -- do it globally
			clippath = clippath.replace(/%/g,"")

			//split (at comma) into an array of smaller strings and now this new thing is an array called coordinates
			var coordinates = clippath.split(",")

			// loop through small strings (each ith thing in coordinates array)
			for (i in coordinates) {
				//trim whitespace - break out the snowman scissors!!!
				coordinates[i] = coordinates[i].trim()
				//create smallest array (w/ 2 things (pair)) by splitting at the " "
				var pair = coordinates[i].split(" ")
				// overwrite the small string with this smallest array (pair), so the whole thing is an array with arrays
				coordinates[i] = pair
				// loop through smallest arrays (pairs) to convert to numbers
				coordinates[i][0] = Number(coordinates[i][0]) + xOffset // (x coordinate)
				coordinates[i][1] = Number(coordinates[i][1]) + yOffset // (y coordinate)
															  // ... of each pair in the array
			}

			return coordinates
		}

///////////////////////////////////////////////////////////////////////////////////////
	// WINTER
		// animation loop
			function animateWinter() {
				if (counter == 0) {
					counter = 2
					createSnowflake()
				}
				else {
					counter--
				}

				repositionSnowflakes()
				drawBackground_WINTER()
				drawSnowflakes()
				drawForeground_WINTER()
			}

		// the IDEA of snowflakes (object - with all its parameters)
			function createSnowflake(){
				var radii = [3, 3, 5, 5.5, 6, 6, 6.5, 6.5, 7]
				var radius = radii[Math.floor(Math.random()*radii.length)]

				var snowflake = {
					x: Math.floor(Math.random() * 800),
					y: -10,
					radius: radius,
					color: "white",
					shadowThickness: 20,
					shadowColor: "lightblue",
					vx: 0.2,
					vy: 1 * radius / 2
				}

				// put in your array of snowflakes this snowflake that was randomly generated
				snowflakes.push(snowflake)
			}

			function repositionSnowflakes(){
				for (i in snowflakes){
					//snowflakes[i].x <-- x is a parameter of a snowflake, which is snowflakes[i] (just like .length)
					snowflakes[i].x = snowflakes[i].x + snowflakes[i].vx
					snowflakes[i].y = snowflakes[i].y + snowflakes[i].vy

					if (snowflakes[i].y > 1210) {
						snowflakes.splice(i, 1)
						i--
					}
				}
			}

		// The Scene (create and animate)
			function drawBackground_WINTER(){

				context.clearRect(0, 0, 800, 1200);

				//sky
					var blueSky = context.createLinearGradient(0, 0, 0, 1500);
						blueSky.addColorStop(0, '#4286f4');
						blueSky.addColorStop(1, 'white');

					var sunrise = context.createLinearGradient(0, 0, 0, 1200);
						sunrise.addColorStop(0, 'lightyellow');
						sunrise.addColorStop(1, 'orange');

					var sunset = context.createLinearGradient(0, 0, 200, 1200);
						sunset.addColorStop(0, '#190663');
						sunset.addColorStop(0.4, '#351aa0');
						sunset.addColorStop(0.5, '#a01b62');
						// sunset.addColorStop(0.6, 'lightyellow');
						sunset.addColorStop(0.8, 'darkorange');


					drawShape([ [0, 0] , [800, 0] , [800, 1200] , [0, 1200] ], blueSky) // sky

				//sun
					//var sun_blueSky = context.createRadialGradient(300, 300, 5, 400, 600, 200); //rays?
					var sunBlueSky = context.createRadialGradient(50, 0, 5, 50, 0, 200);
						// sun_blueSky.addColorStop(0, 'orange');
						sunBlueSky.addColorStop(0, 'yellow');
				  		sunBlueSky.addColorStop(0.2, 'lightyellow');
				  		sunBlueSky.addColorStop(1, 'rgba(66, 134, 244, 0)');

			  		var sunRise = context.createRadialGradient(400, 600, 5, 400, 600, 200);
						sunRise.addColorStop(0, 'white');
						sunRise.addColorStop(0.3, 'orange');
				  		sunRise.addColorStop(0.5, 'lightyellow');
				  		sunRise.addColorStop(1, 'rgba(255,255,224, 0)');

				  	var sunSet = context.createRadialGradient(700, 900, 5, 700, 900, 200);
						sunSet.addColorStop(0, 'orange');
				  		sunSet.addColorStop(0.8, 'lightyellow');
				  		sunSet.addColorStop(1, 'rgba(255,255,224, 0)');

					//drawCircle(400, 600, 1000, sunBlueSky)

				//snowscape		
					drawShape(snowscapes[0],
						"white", 100, "lightblue") // background
					drawShape(snowscapes[1],
						"white", 100, "lightblue") // middleground

				//snowman
					drawCircle(300, 980, 60, "white", 40, "lightblue") //snowman bottom
					drawCircle(300, 900, 48, "white", 40, "lightblue") //snowman middle
					drawCircle(300, 830, 40, "white", 50, "lightblue") //snowman head
					drawCircle(298, 828, 3, "black") //snowman eye front
					drawCircle(314, 825, 3, "black") //snowman eye back
					drawShape(snowmanNose, "orange") // snowman nose

				//more snowscape
					drawShape(snowscapes[2], "white", 100, "lightblue") // foreground
					

				//deciduous tree (no leaves)
					drawShape(tree, "#3a2213") // deciduous tree
					
				// snow in front of tree
					drawShape(snowscapes[3], "white", 100, "lightblue") // foreforeground
				
				//snow on tree	
					drawShape(snowOnTree[0], "white", 30, "lightblue")
					drawShape(snowOnTree[1], "white", 30, "lightblue")
					drawShape(snowOnTree[2], "white", 30, "lightblue")
			}

			function drawSnowflakes() {
				for (i in snowflakes) {
					drawCircle(snowflakes[i].x, snowflakes[i].y, snowflakes[i].radius, snowflakes[i].color, snowflakes[i].shadowThickness, snowflakes[i].shadowColor)
				}
			}

			function drawForeground_WINTER() {
				drawShape(windowSnow[0], "white", 20, "darkgray") // windowsill snow bottom
				drawShape(windowSnow[1], "white", 80, "white") // windowsill snow middle
				drawShape(windowCrossbeam, "#823c0e") // window crossbeam
				drawShape(windowLatch, "#823c0e") // window latch
			}

///////////////////////////////////////////////////////////////////////////////////////
	// SPRING
		// animation loop
			function animateSpring() {
				context.clearRect(0, 0, 800, 1200);
				drawBackground_SPRING()
				rabbit = repositionRabbit(rabbit)
				drawRabbit(rabbit.x, rabbit.y, rabbit.legsPosition)
				drawForeground_SPRING()
				
								
			}

		// drawBackground SPRING
			function drawBackground_SPRING() {
				//sky
					var blueSky = context.createLinearGradient(0, 0, 0, 1500);
						blueSky.addColorStop(0, '#4286f4');
						blueSky.addColorStop(0.8, 'white');

					var sunrise = context.createLinearGradient(0, 0, 0, 1200);
						sunrise.addColorStop(0, 'lightyellow');
						sunrise.addColorStop(1, 'orange');

					var sunset = context.createLinearGradient(0, 0, 200, 1200);
						sunset.addColorStop(0, '#190663');
						sunset.addColorStop(0.4, '#351aa0');
						sunset.addColorStop(0.5, '#a01b62');
						// sunset.addColorStop(0.6, 'lightyellow');
						sunset.addColorStop(0.8, 'darkorange');


					drawShape([ [0, 0] , [800, 0] , [800, 1200] , [0, 1200] ], blueSky) // sky

				//sun
					//var sun_blueSky = context.createRadialGradient(300, 300, 5, 400, 600, 200); //rays?
					var sunBlueSky = context.createRadialGradient(100, 100, 5, 100, 100, 200);
						sunBlueSky.addColorStop(0, '#FFFF66');
				  		sunBlueSky.addColorStop(0.2, 'lightyellow');
				  		sunBlueSky.addColorStop(1, 'rgba(66, 134, 244, 0)');

			  		var sunRise = context.createRadialGradient(400, 600, 5, 400, 600, 200);
						sunRise.addColorStop(0, 'white');
						sunRise.addColorStop(0.3, 'orange');
				  		sunRise.addColorStop(0.5, 'lightyellow');
				  		sunRise.addColorStop(1, 'rgba(255,255,224, 0)');

				  	var sunSet = context.createRadialGradient(700, 900, 5, 700, 900, 200);
						sunSet.addColorStop(0, 'orange');
				  		sunSet.addColorStop(0.8, 'lightyellow');
				  		sunSet.addColorStop(1, 'rgba(255,255,224, 0)');

					drawCircle(100, 100, 1000, sunBlueSky)
				
				// clouds
					// drawCircle()
					// drawCircle()
					// drawCircle()
					// drawCircle()
					// drawCircle()
					// drawCircle()

				// grass
					drawImage("lawn.png", 0, canvas.height - canvas.width / 2 + 20, canvas.width, canvas.width / 2)
			}		
					

		// drawForeground
			function drawForeground_SPRING() {
				//deciduous tree
					drawShape(tree, "#3a2213")

				// grass in front of tree
					drawImage("grass.png", 625, 1035, 200, 70)
					drawImage("grass.png", 650, 1050, 200, 70)

				//leaves
					drawLeaves()

				// petals
					drawPetals()
					
				// window (crossbeam and latch)	
					drawShape(windowCrossbeam, "#823c0e") // window crossbeam
					drawShape(windowLatch, "#823c0e") // window latch
			}

		// reposition rabbit
			function repositionRabbit(rabbit) {
				// move right
					rabbit.x = rabbit.x + 4
					if (rabbit.x > 1000) {
						rabbit.x = Math.floor(Math.random() * 5000) - 10000
					}

				// swap legs
					if (rabbit.legsCounter == 0) {
						rabbit.legsCounter = 10

						if (rabbit.legsPosition == "in") {
							rabbit.legsPosition = "out"
						}
						else {
							rabbit.legsPosition = "in"
						}
					}
					else {
						rabbit.legsCounter--
					}

				return rabbit
			}

		// drawing a rabbit
			function drawRabbit(x, y, legsPosition) {
				if (legsPosition == "in") {		
					var rabbitClippath = {
						ear_back: ["79% 8%, 80.75% 8%, 81% 9%, 81.25% 13%, 81% 19%, 82% 25%, 81.01% 28.61% , 76.67% 28.62%, 74% 28.75%, 74% 23%, 75% 18%, 76% 14%, 77% 10%",
							"#7c4d13"],

						ear_line: ["75.66% 14.43%, 76.85% 17%, 78.35% 23%, 78.35% 26%, 77.95% 28%, 77.35% 28%",
							"black"],	

						profile: ["59.69% 61.77%, 52.8% 62.03%, 47.33% 61.38%, 34.07% 62.16%, 24.45% 60.71%, 20.57% 58.68% , 19.06% 55.48%, 17.2% 51.43%, 16.19% 48.57%, 13.32% 44.52%, 12.14% 41.65%, 12.48% 38.79%, 14.84% 36.26%, 17.54% 36.76%, 20.07% 39.12%, 21.75% 39.8%, 23.1% 38.28%, 26.31% 36.09%, 30% 34%, 35% 33%, 41.5% 33%, 47% 34%, 53% 35%, 57.87% 34.98%, 63% 35%, 67% 33.5%, 69% 32%, 72% 29%, 79% 28%, 82% 28.75%, 84.5% 32%, 88.25% 35.5%, 88.75% 37%, 89% 39%, 88.75% 40%, 87.75% 41.5%, 87.2% 42.25%, 84% 43.5%, 81% 43.75%, 77% 45%, 75% 48%, 73.36% 52.78%, 72.01% 56.49%, 69.85% 59.57%", 
							"#7c4d13"],
						
						back_leg_line: ["25.46% 44.9%, 30.35% 42.84%, 35.58% 41.66%, 40.47% 42.33%, 44.34% 43.68%, 47.21% 45.37%, 48.9% 46.72%, 50.92% 48.74%, 51.93% 51.27%, 52.1% 53.97%, 52.27% 57.34%, 51.5% 61.75%",
							"black"],

						chin: ["85.75% 43.01%, 84.14% 43.64%, 81.63% 43.64%, 77.86% 44.74%, 75.45% 47.31%, 73.56% 52.01%, 73.31% 53.53%, 71.59% 57.46% , 71.95% 52.72%, 72.68% 49.81%, 73.56% 47.07%, 76.01% 43.75%, 79.95% 42.56%, 83.38% 42.2%, 85.9% 42.23%",
							"#d8bb97"],

						stomach: ["56.74% 62.05%, 52.76% 62.07%, 46.75% 61.53%, 34.05% 61.87%, 24.43% 60.25%, 58.72% 59.71%, 60.13% 59.97%, 59.18% 61.22% , 58.4% 62.01%",
							"#d8bb97"],

						back_leg: ["36.42% 76.9%, 35.75% 74.87%, 34.74% 70.83%, 32.53% 66.26%, 25.11% 62.89%, 20.73% 58.5%, 20.22% 53.78%, 21.57% 48.05%, 24.96% 45.19%, 29.85% 43.34%, 35.08% 42.16%, 39.97% 42.83%, 43.84% 44.18%, 46.71% 45.87%, 48.4% 47.22%, 50.42% 49.24%, 51.43% 51.77%, 51.6% 54.47%, 51.77% 57.84%, 51.43% 61.21%, 50.25% 64.08%, 48.57% 66.61%, 47.22% 69.31%, 45.87% 72.01%, 48.57% 72.85%, 51.77% 73.86%, 55.99% 74.54%, 58.01% 76.39%, 58.35% 79.93%, 55.82% 81.28%, 51.6% 80.78%, 46.21% 78.92%, 42.33% 78.25%, 39.46% 78.75% , 37.27% 78.25%",
							"#7c4d13"],

						front_leg: ["63.21% 66.96%, 68.16% 61.8%, 70.15% 59.19%, 63.41% 60.71% , 58.52% 61.38%, 57.22% 65.44%, 55.59% 68.13%, 51.32% 69.83%, 51% 71.35%, 51.07% 72.93%, 53.67% 74.18%, 56.77% 73.5%, 58.9% 72.07%, 61.79% 68.76%",
							"#7c4d13"],

						ear_front: ["73% 30%, 72% 28%, 70.5% 22%, 71% 17%, 70.75% 13%, 71% 9%, 72% 7%, 73.5% 7%, 74.5% 8%, 75.25% 12%, 76.5% 18%, 78% 24%, 78% 27.5%, 77.5% 29%",
							"#7c4d13"],

						nose: ["86% 36.56%, 87.85% 38.3%, 88.06% 36.34%, 87.63% 37.51%",
							"pink"],

						eye: ["78.92% 34.09% , 80.54% 32.8%, 81.4% 32.9%, 82.47% 33.66%, 81.72% 34.52%, 80.43% 34.73%",
							"black"],

						tail_half: ["20.43% 58.6%, 13.32% 44.52%, 12.14% 41.65%, 12.48% 38.79%, 14.73% 36.24%, 15.81% 37.53%, 17.31% 41.4% , 18.39% 43.66%, 18.82% 46.45%, 19.35% 50.11%, 19.68% 53.87%",
							"#d8bb97"],

						ear_inner: ["73.63% 29.98%, 72.68% 27.79%, 71.27% 21.82%, 71.74% 17.11%, 71.43% 13.03%, 71.74% 9.42%, 72.21% 8.32%, 73.31% 8.32%, 73.94% 9.42%, 74.25% 11.93% , 75.82% 19%, 76.92% 24.02%, 77.39% 27.47%, 76.92% 29.51%",
							"#d8bb97"]
					}
				}
				else {
					var rabbitClippath = {
						ear_back: ["83.76% 6.29%, 85.5% 6.47%, 85.64% 7.5%, 85.47% 11.49%, 84.59% 17.44%, 84.96% 23.51%, 83.6% 26.99%, 79.28% 26.55%, 76.62% 26.4%, 77.22% 20.68%, 78.73% 15.82%, 80.14% 11.94%, 81.56% 8.06%",
							"#7c4d13"],

						ear_line: ["79.76% 12.33%, 80.67% 15.01%, 81.54% 21.14%, 81.23% 24.12%, 80.62% 26.07%, 80.02% 26.01%",
							"black"],

						profile: ["58.94% 57.75%, 52.05% 57.28%, 46.68% 56.07%, 33.41% 55.45%, 24% 53%, 20.35% 50.59%, 19.18% 47.24%, 17.74% 43.02%, 17.05% 40.06%, 14.62% 35.75%, 13.74% 32.76%, 14.38% 29.95%, 17% 27.68%, 19.63% 28.47%, 21.89% 31.09%, 23.49% 31.92%, 24.99% 30.56%, 28.41% 28.71%, 32.31% 27.02%, 37.38% 26.56%, 43.84% 27.23%, 49.21% 28.8%, 55.08% 30.43%, 59.91% 30.91%, 65.02% 31.47%, 69.16% 30.4%, 71.3% 29.11%, 74.6% 26.43%, 81.66% 26.18%, 84.58% 27.23%, 86.71% 30.73%, 90.08% 34.61%, 90.42% 36.14%, 90.46% 38.16%, 90.1% 39.13%, 88.95% 40.52%, 88.33% 41.21%, 85.02% 42.12%, 82.01% 42.05%, 77.9% 42.88%, 75.6% 45.65%, 73.46% 50.24%, 71.73% 53.78%, 69.26% 56.62%", 
							"#7c4d13"],
						
						back_leg_line: ["9.38% 48.28%, 11.44% 47.64%, 15.49% 46.81%, 20.19% 44.75%, 23.84% 37.45%, 28.31% 33.22%, 33.01% 32.79%, 38.73% 34.44%, 41.5% 37.9%, 43.18% 42.87%, 44.21% 48.16%, 44.51% 53.02%, 44.01% 56.22%, 42.83% 59.09%, 40.63% 61.45%, 38.27% 63.129%, 35.41% 64.15%, 33.05% 64.65%, 30.18% 64.48%, 26.47% 63.81%, 23.43% 62.629%, 20.57% 60.769%, 17.7% 58.75%, 14.67% 57.06%, 13.32% 59.93%, 11.87% 63.68%, 10.45% 67.69%, 9.15% 69.78%, 5.61% 70.04%, 4.3% 67.46%, 5% 63.269%, 7.08% 57.959%, 7.84% 54.11%, 7.46% 51.28%, 8.04% 49.06%",
							"black"],

						chin: ["87.51% 40.81%, 87.33% 41.54%, 85.01% 42.12%, 81.99% 42.05%, 77.9% 42.88%, 75.6% 45.65%, 73.47% 50.24%, 72.69% 52.04%, 72.04% 51.51%, 71.83% 50.86%, 72.71% 48.01%, 73.74% 45.3%, 76.35% 42.12%, 80.35% 41.14%, 83.8% 40.96%, 86.87% 40.75%",
							"#d8bb97"],

						stomach: ["55.66% 57.59%, 51.7% 57.26%, 45.75% 56.21%, 33.07% 55.44%, 23.64% 52.98%, 57.84% 55.43%, 62.04% 55.59%, 63.98% 57.2%, 59.14% 57.96%",
							"#d8bb97"],

						back_leg: ["8.88% 48.78%, 10.94% 48.14%, 14.99% 47.31%, 19.69% 45.25%, 23.34% 37.95%, 27.81% 33.72%, 32.51% 33.29%, 38.23% 34.94%, 41% 38.4%, 42.68% 43.37%, 43.71% 48.66%, 44.01% 53.52%, 43.51% 56.72%, 42.33% 59.59%, 40.13% 61.95%, 37.77% 63.629%, 34.91% 64.65%, 32.55% 65.15%, 29.68% 64.98%, 25.97% 64.31%, 22.93% 63.129%, 20.07% 61.269%, 17.2% 59.25%, 14.17% 57.56%, 12.82% 60.43%, 11.37% 64.18%, 9.95% 68.19%, 8.65% 70.28%, 5.11% 70.54%, 3.8% 67.96%, 4.5% 63.769%, 6.58% 58.459%, 7.34% 54.61%, 6.96% 51.78%, 7.54% 49.56%",
							"#7c4d13"],

						front_leg: ["69.81% 59.56%, 74.87% 61.42%, 79.26% 63.61%, 82.46% 66.14%, 84.82% 66.65%, 86.34% 65.32%, 86% 62.62%, 83.47% 60.599%, 80.94% 58.91%, 78.08% 56.55%, 72.18% 51.66%, 71.16% 48.29%, 69.14% 45.93%, 65.77% 45.76%, 62.56% 46.77%, 60.71% 49.64%, 60.71% 53.66%, 62.56% 56.87%, 65.94% 58.21%",
							"#7c4d13"],

						ear_front: ["75.09% 27.1%, 74.27% 25.02%, 73.3% 18.9%, 74.23% 13.98%, 74.33% 9.97%, 74.93% 6%, 76.1% 4.1%, 77.59% 4.23%, 78.5% 5.31%, 78.9% 9.37%, 79.62% 15.45%, 80.6% 21.55%, 80.3% 25.05%, 79.65% 26.49%",
							"#7c4d13"],

						nose: ["87.5% 35.56%, 89.35% 37.3%, 89.56% 35.34%, 89.13% 36.51%",
							"pink"],

						eye: ["81.24% 32.04%, 82.96% 30.880000000000003%, 83.8% 31.049%, 84.81% 31.9%, 84.01% 32.69%, 82.7% 32.8%",
							"black"],

						tail_half: ["20.74% 51.05%, 14.4% 36.61%, 13.37% 33.68%, 14.13% 30.3% , 16.259% 28.43%, 17.23% 29.77%, 18.53% 33.7%, 19.5% 36.02%, 19.79% 38.83%, 20.11% 42.54%, 20.26% 46.3%",
							"#d8bb97"],

						ear_inner: ["75.55% 27.13%, 74.8% 24.86%, 73.9% 18.79%, 74.78% 14.149999999999999%, 74.83% 10.05%, 75.46% 6.49%, 76.02% 5.42%, 77.12% 5.52%, 77.65% 6.67%, 77.74% 9.2%, 78.68% 16.4%, 79.34% 21.47%, 79.51% 24.95%, 78.87% 26.94%",
							"#d8bb97"]
					}
				}

				for (part in rabbitClippath){
					drawShape(convertClippath(x, y, rabbitClippath[part][0]), rabbitClippath[part][1])
				}
			}

		// leaves
			function drawLeaves() {
				for (var i in leaves) {
					drawShape(leaves[i], "green")
				}
			}

		// flowers
			function drawPetals() {
				//for (var i = 0; i < petals.length; i++) {
				for (var i in petals) {
					drawShape(petals[i], "pink")
				}	
			}
		//function drawShape(coordinates, color, shadowThickness, shadowColor, lineargradient, xOffset, yOffset)	

///////////////////////////////////////////////////////////////////////////////////////
	// SUMMER
		function animateSummer() {
			context.clearRect(0, 0, 800, 1200);
			drawBackground_SUMMER()
			drawForeground_SUMMER()
		}

		// drawBackground SUMMER
			function drawBackground_SUMMER() {
				//sky
					var blueSky = context.createLinearGradient(0, 0, 0, 1500);
						blueSky.addColorStop(0, '#4286f4');
						blueSky.addColorStop(0.8, 'white');

					var sunrise = context.createLinearGradient(0, 0, 0, 1200);
						sunrise.addColorStop(0, 'lightyellow');
						sunrise.addColorStop(1, 'orange');

					var sunset = context.createLinearGradient(0, 0, 200, 1200);
						sunset.addColorStop(0, '#190663');
						sunset.addColorStop(0.4, '#351aa0');
						sunset.addColorStop(0.5, '#a01b62');
						// sunset.addColorStop(0.6, 'lightyellow');
						sunset.addColorStop(0.8, 'darkorange');


					drawShape([ [0, 0] , [800, 0] , [800, 1200] , [0, 1200] ], blueSky) // sky

				//sun
					var sunBlueSky = context.createRadialGradient(50, 0, 5, 50, 0, 200);
						sunBlueSky.addColorStop(0, 'yellow');
				  		sunBlueSky.addColorStop(0.2, 'lightyellow');
				  		sunBlueSky.addColorStop(1, 'rgba(66, 134, 244, 0)');

			  		var sunRise = context.createRadialGradient(400, 600, 5, 400, 600, 200);
						sunRise.addColorStop(0, 'white');
						sunRise.addColorStop(0.3, 'orange');
				  		sunRise.addColorStop(0.5, 'lightyellow');
				  		sunRise.addColorStop(1, 'rgba(255,255,224, 0)');

				  	var sunSet = context.createRadialGradient(700, 900, 5, 700, 900, 200);
						sunSet.addColorStop(0, 'orange');
				  		sunSet.addColorStop(0.8, 'lightyellow');
				  		sunSet.addColorStop(1, 'rgba(255,255,224, 0)');

					drawCircle(100, 100, 1000, sunBlueSky)
				
				// clouds
					drawCircle()
					drawCircle()
					drawCircle()
					drawCircle()
					drawCircle()
					drawCircle()

				// grass
					drawImage("lawn.png", 0, canvas.height - canvas.width / 2 + 20, canvas.width, canvas.width / 2)
			}		
					

		// drawForeground
			function drawForeground_SUMMER() {
				//deciduous tree
					drawShape(tree, "#3a2213")

				// grass in front of tree
					drawImage("grass.png", 625, 1035, 200, 70)
					drawImage("grass.png", 650, 1050, 200, 70)

				// petals and leaf
					

				// window (crossbeam and latch)	
					drawShape(windowCrossbeam, "#823c0e") // window crossbeam
					drawShape(windowLatch, "#823c0e") // window latch
			}

///////////////////////////////////////////////////////////////////////////////////////
	// FALL
		function animateFall() {
			context.clearRect(0, 0, 800, 1200);
			drawBackground_FALL()
			drawForeground_FALL()
		}

		// drawBackground FALL
			function drawBackground_FALL() {
				//sky
					var blueSky = context.createLinearGradient(0, 0, 0, 1500);
						blueSky.addColorStop(0, '#4286f4');
						blueSky.addColorStop(0.8, 'white');

					var sunrise = context.createLinearGradient(0, 0, 0, 1200);
						sunrise.addColorStop(0, 'lightyellow');
						sunrise.addColorStop(1, 'orange');

					var sunset = context.createLinearGradient(0, 0, 200, 1200);
						sunset.addColorStop(0, '#190663');
						sunset.addColorStop(0.4, '#351aa0');
						sunset.addColorStop(0.5, '#a01b62');
						// sunset.addColorStop(0.6, 'lightyellow');
						sunset.addColorStop(0.8, 'darkorange');


					drawShape([ [0, 0] , [800, 0] , [800, 1200] , [0, 1200] ], blueSky) // sky

				//sun
					var sunBlueSky = context.createRadialGradient(100, 100, 5, 100, 100, 200);
						sunBlueSky.addColorStop(0, '#FFFF66');
				  		sunBlueSky.addColorStop(0.2, 'lightyellow');
				  		sunBlueSky.addColorStop(1, 'rgba(66, 134, 244, 0)');

			  		var sunRise = context.createRadialGradient(400, 600, 5, 400, 600, 200);
						sunRise.addColorStop(0, 'white');
						sunRise.addColorStop(0.3, 'orange');
				  		sunRise.addColorStop(0.5, 'lightyellow');
				  		sunRise.addColorStop(1, 'rgba(255,255,224, 0)');

				  	var sunSet = context.createRadialGradient(700, 900, 5, 700, 900, 200);
						sunSet.addColorStop(0, 'orange');
				  		sunSet.addColorStop(0.8, 'lightyellow');
				  		sunSet.addColorStop(1, 'rgba(255,255,224, 0)');

					drawCircle(100, 100, 1000, sunBlueSky)
				
				// clouds
					drawCircle()
					drawCircle()
					drawCircle()
					drawCircle()
					drawCircle()
					drawCircle()

				// grass
					drawImage("lawn.png", 0, canvas.height - canvas.width / 2 + 20, canvas.width, canvas.width / 2)
			}		
					

		// drawForeground
			function drawForeground_FALL() {
				//deciduous tree
					drawShape(tree, "#3a2213")

				// grass in front of tree
					drawImage("grass.png", 625, 1035, 200, 70)
					drawImage("grass.png", 650, 1050, 200, 70)

				// petals and leaf
					

				// window (crossbeam and latch)	
					drawShape(windowCrossbeam, "#823c0e") // window crossbeam
					drawShape(windowLatch, "#823c0e") // window latch
			}
}
